<launch>
  


  <!-- ##################### VARRIABLE ############################# -->
  <arg name="yaml_file" default="$(find Turtlebot_RRT_SLAM)/map/rrt_slam_v4.yaml"/>
  <arg name="gazebo_world_file" default="$(find Turtlebot_RRT_SLAM)/map/wall_v4.sdf"/>
  <arg name="rviz_config" default="$(find Turtlebot_RRT_SLAM)/rviz/navigation.rviz"/>
  <arg name="amcl_launch_xml" default="$(find turtlebot_navigation)/launch/includes/amcl/amcl.launch.xml"/>
  <arg name="move_base_launch_xml" default="$(find Turtlebot_RRT_SLAM)/launch/includes/move_base.launch.xml"/>
  <!-- ############################################################ -->




  <!-- #################### Launch the map server ################# -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg yaml_file)" respawn="false">
    <param name="frame_id" value="map"/>
  </node>
  <!-- ############################################################ -->



  <!-- ######################## Gazebo ########################## -->
  <arg name="gui" default="true"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg gazebo_world_file)"/>
  </include>
  <!-- ########################################################## -->


  <!-- ######################### Turtlebot ###################### -->
  <!-- Launch robot model -->
  <arg name="base" value="$(optenv TURTLEBOT_BASE kobuki)"/>
  <arg name="stacks" value="$(optenv TURTLEBOT_STACKS hexagons)"/> 
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  
  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>
  
  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>
  <!-- ########################################################## -->



  <!-- ############################ RViz ######################## -->
  <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(arg rviz_config)"/>
  <!-- ########################################################## -->



  <!-- ############################# AMCL ####################### -->
  <include file="$(arg amcl_launch_xml)"/>
  <!-- ########################################################## -->



  <!-- ######################### Move base ###################### -->
  <include file="$(arg move_base_launch_xml)"/>
  <!-- ########################################################## -->


  <arg name="is_obs" default="disable"/>
  <node name="spawn_object" pkg="gazebo_ros" type="spawn_model" 
        args="-database coke_can -gazebo -model coke_can -x 0.5 -y 1.5" 
        respawn="false" output="screen" if="$(eval is_obs == 'enable')" />


</launch>
